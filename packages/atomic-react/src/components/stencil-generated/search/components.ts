'use client';

/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */

import { type RedirectionPayload } from "@coveo/atomic";
import { AtomicAriaLive as AtomicAriaLiveElement, defineCustomElement as defineAtomicAriaLive } from "@coveo/atomic/components/atomic-aria-live";
import { AtomicAutomaticFacetGenerator as AtomicAutomaticFacetGeneratorElement, defineCustomElement as defineAtomicAutomaticFacetGenerator } from "@coveo/atomic/components/atomic-automatic-facet-generator";
import { AtomicAutomaticFacet as AtomicAutomaticFacetElement, defineCustomElement as defineAtomicAutomaticFacet } from "@coveo/atomic/components/atomic-automatic-facet";
import { AtomicBreadbox as AtomicBreadboxElement, defineCustomElement as defineAtomicBreadbox } from "@coveo/atomic/components/atomic-breadbox";
import { AtomicCategoryFacet as AtomicCategoryFacetElement, defineCustomElement as defineAtomicCategoryFacet } from "@coveo/atomic/components/atomic-category-facet";
import { AtomicColorFacet as AtomicColorFacetElement, defineCustomElement as defineAtomicColorFacet } from "@coveo/atomic/components/atomic-color-facet";
import { AtomicComponentError as AtomicComponentErrorElement, defineCustomElement as defineAtomicComponentError } from "@coveo/atomic/components/atomic-component-error";
import { AtomicDidYouMean as AtomicDidYouMeanElement, defineCustomElement as defineAtomicDidYouMean } from "@coveo/atomic/components/atomic-did-you-mean";
import { AtomicExternal as AtomicExternalElement, defineCustomElement as defineAtomicExternal } from "@coveo/atomic/components/atomic-external";
import { AtomicFacetManager as AtomicFacetManagerElement, defineCustomElement as defineAtomicFacetManager } from "@coveo/atomic/components/atomic-facet-manager";
import { AtomicFacet as AtomicFacetElement, defineCustomElement as defineAtomicFacet } from "@coveo/atomic/components/atomic-facet";
import { AtomicFoldedResultList as AtomicFoldedResultListElement, defineCustomElement as defineAtomicFoldedResultList } from "@coveo/atomic/components/atomic-folded-result-list";
import { AtomicFormatCurrency as AtomicFormatCurrencyElement, defineCustomElement as defineAtomicFormatCurrency } from "@coveo/atomic/components/atomic-format-currency";
import { AtomicFormatNumber as AtomicFormatNumberElement, defineCustomElement as defineAtomicFormatNumber } from "@coveo/atomic/components/atomic-format-number";
import { AtomicFormatUnit as AtomicFormatUnitElement, defineCustomElement as defineAtomicFormatUnit } from "@coveo/atomic/components/atomic-format-unit";
import { AtomicGeneratedAnswer as AtomicGeneratedAnswerElement, defineCustomElement as defineAtomicGeneratedAnswer } from "@coveo/atomic/components/atomic-generated-answer";
import { AtomicHtml as AtomicHtmlElement, defineCustomElement as defineAtomicHtml } from "@coveo/atomic/components/atomic-html";
import { AtomicIcon as AtomicIconElement, defineCustomElement as defineAtomicIcon } from "@coveo/atomic/components/atomic-icon";
import { AtomicLayoutSection as AtomicLayoutSectionElement, defineCustomElement as defineAtomicLayoutSection } from "@coveo/atomic/components/atomic-layout-section";
import { AtomicLoadMoreResults as AtomicLoadMoreResultsElement, defineCustomElement as defineAtomicLoadMoreResults } from "@coveo/atomic/components/atomic-load-more-results";
import { AtomicNoResults as AtomicNoResultsElement, defineCustomElement as defineAtomicNoResults } from "@coveo/atomic/components/atomic-no-results";
import { AtomicNotifications as AtomicNotificationsElement, defineCustomElement as defineAtomicNotifications } from "@coveo/atomic/components/atomic-notifications";
import { AtomicNumericFacet as AtomicNumericFacetElement, defineCustomElement as defineAtomicNumericFacet } from "@coveo/atomic/components/atomic-numeric-facet";
import { AtomicNumericRange as AtomicNumericRangeElement, defineCustomElement as defineAtomicNumericRange } from "@coveo/atomic/components/atomic-numeric-range";
import { AtomicPager as AtomicPagerElement, defineCustomElement as defineAtomicPager } from "@coveo/atomic/components/atomic-pager";
import { AtomicPopover as AtomicPopoverElement, defineCustomElement as defineAtomicPopover } from "@coveo/atomic/components/atomic-popover";
import { AtomicQueryError as AtomicQueryErrorElement, defineCustomElement as defineAtomicQueryError } from "@coveo/atomic/components/atomic-query-error";
import { AtomicQuerySummary as AtomicQuerySummaryElement, defineCustomElement as defineAtomicQuerySummary } from "@coveo/atomic/components/atomic-query-summary";
import { AtomicQuickviewModal as AtomicQuickviewModalElement, defineCustomElement as defineAtomicQuickviewModal } from "@coveo/atomic/components/atomic-quickview-modal";
import { AtomicQuickview as AtomicQuickviewElement, defineCustomElement as defineAtomicQuickview } from "@coveo/atomic/components/atomic-quickview";
import { AtomicRatingFacet as AtomicRatingFacetElement, defineCustomElement as defineAtomicRatingFacet } from "@coveo/atomic/components/atomic-rating-facet";
import { AtomicRatingRangeFacet as AtomicRatingRangeFacetElement, defineCustomElement as defineAtomicRatingRangeFacet } from "@coveo/atomic/components/atomic-rating-range-facet";
import { AtomicRecsError as AtomicRecsErrorElement, defineCustomElement as defineAtomicRecsError } from "@coveo/atomic/components/atomic-recs-error";
import { AtomicRecsInterface as AtomicRecsInterfaceElement, defineCustomElement as defineAtomicRecsInterface } from "@coveo/atomic/components/atomic-recs-interface";
import { AtomicRecsList as AtomicRecsListElement, defineCustomElement as defineAtomicRecsList } from "@coveo/atomic/components/atomic-recs-list";
import { AtomicRecsResult as AtomicRecsResultElement, defineCustomElement as defineAtomicRecsResult } from "@coveo/atomic/components/atomic-recs-result";
import { AtomicRefineModal as AtomicRefineModalElement, defineCustomElement as defineAtomicRefineModal } from "@coveo/atomic/components/atomic-refine-modal";
import { AtomicRefineToggle as AtomicRefineToggleElement, defineCustomElement as defineAtomicRefineToggle } from "@coveo/atomic/components/atomic-refine-toggle";
import { AtomicRelevanceInspector as AtomicRelevanceInspectorElement, defineCustomElement as defineAtomicRelevanceInspector } from "@coveo/atomic/components/atomic-relevance-inspector";
import { AtomicResultBadge as AtomicResultBadgeElement, defineCustomElement as defineAtomicResultBadge } from "@coveo/atomic/components/atomic-result-badge";
import { AtomicResultChildrenTemplate as AtomicResultChildrenTemplateElement, defineCustomElement as defineAtomicResultChildrenTemplate } from "@coveo/atomic/components/atomic-result-children-template";
import { AtomicResultChildren as AtomicResultChildrenElement, defineCustomElement as defineAtomicResultChildren } from "@coveo/atomic/components/atomic-result-children";
import { AtomicResultDate as AtomicResultDateElement, defineCustomElement as defineAtomicResultDate } from "@coveo/atomic/components/atomic-result-date";
import { AtomicResultFieldsList as AtomicResultFieldsListElement, defineCustomElement as defineAtomicResultFieldsList } from "@coveo/atomic/components/atomic-result-fields-list";
import { AtomicResultHtml as AtomicResultHtmlElement, defineCustomElement as defineAtomicResultHtml } from "@coveo/atomic/components/atomic-result-html";
import { AtomicResultIcon as AtomicResultIconElement, defineCustomElement as defineAtomicResultIcon } from "@coveo/atomic/components/atomic-result-icon";
import { AtomicResultImage as AtomicResultImageElement, defineCustomElement as defineAtomicResultImage } from "@coveo/atomic/components/atomic-result-image";
import { AtomicResultLink as AtomicResultLinkElement, defineCustomElement as defineAtomicResultLink } from "@coveo/atomic/components/atomic-result-link";
import { AtomicResultList as AtomicResultListElement, defineCustomElement as defineAtomicResultList } from "@coveo/atomic/components/atomic-result-list";
import { AtomicResultLocalizedText as AtomicResultLocalizedTextElement, defineCustomElement as defineAtomicResultLocalizedText } from "@coveo/atomic/components/atomic-result-localized-text";
import { AtomicResultMultiValueText as AtomicResultMultiValueTextElement, defineCustomElement as defineAtomicResultMultiValueText } from "@coveo/atomic/components/atomic-result-multi-value-text";
import { AtomicResultNumber as AtomicResultNumberElement, defineCustomElement as defineAtomicResultNumber } from "@coveo/atomic/components/atomic-result-number";
import { AtomicResultPrintableUri as AtomicResultPrintableUriElement, defineCustomElement as defineAtomicResultPrintableUri } from "@coveo/atomic/components/atomic-result-printable-uri";
import { AtomicResultRating as AtomicResultRatingElement, defineCustomElement as defineAtomicResultRating } from "@coveo/atomic/components/atomic-result-rating";
import { AtomicResultSectionActions as AtomicResultSectionActionsElement, defineCustomElement as defineAtomicResultSectionActions } from "@coveo/atomic/components/atomic-result-section-actions";
import { AtomicResultSectionBadges as AtomicResultSectionBadgesElement, defineCustomElement as defineAtomicResultSectionBadges } from "@coveo/atomic/components/atomic-result-section-badges";
import { AtomicResultSectionBottomMetadata as AtomicResultSectionBottomMetadataElement, defineCustomElement as defineAtomicResultSectionBottomMetadata } from "@coveo/atomic/components/atomic-result-section-bottom-metadata";
import { AtomicResultSectionChildren as AtomicResultSectionChildrenElement, defineCustomElement as defineAtomicResultSectionChildren } from "@coveo/atomic/components/atomic-result-section-children";
import { AtomicResultSectionEmphasized as AtomicResultSectionEmphasizedElement, defineCustomElement as defineAtomicResultSectionEmphasized } from "@coveo/atomic/components/atomic-result-section-emphasized";
import { AtomicResultSectionExcerpt as AtomicResultSectionExcerptElement, defineCustomElement as defineAtomicResultSectionExcerpt } from "@coveo/atomic/components/atomic-result-section-excerpt";
import { AtomicResultSectionTitleMetadata as AtomicResultSectionTitleMetadataElement, defineCustomElement as defineAtomicResultSectionTitleMetadata } from "@coveo/atomic/components/atomic-result-section-title-metadata";
import { AtomicResultSectionTitle as AtomicResultSectionTitleElement, defineCustomElement as defineAtomicResultSectionTitle } from "@coveo/atomic/components/atomic-result-section-title";
import { AtomicResultSectionVisual as AtomicResultSectionVisualElement, defineCustomElement as defineAtomicResultSectionVisual } from "@coveo/atomic/components/atomic-result-section-visual";
import { AtomicResultText as AtomicResultTextElement, defineCustomElement as defineAtomicResultText } from "@coveo/atomic/components/atomic-result-text";
import { AtomicResultTimespan as AtomicResultTimespanElement, defineCustomElement as defineAtomicResultTimespan } from "@coveo/atomic/components/atomic-result-timespan";
import { AtomicResult as AtomicResultElement, defineCustomElement as defineAtomicResult } from "@coveo/atomic/components/atomic-result";
import { AtomicResultsPerPage as AtomicResultsPerPageElement, defineCustomElement as defineAtomicResultsPerPage } from "@coveo/atomic/components/atomic-results-per-page";
import { AtomicSearchBoxInstantResults as AtomicSearchBoxInstantResultsElement, defineCustomElement as defineAtomicSearchBoxInstantResults } from "@coveo/atomic/components/atomic-search-box-instant-results";
import { AtomicSearchBoxQuerySuggestions as AtomicSearchBoxQuerySuggestionsElement, defineCustomElement as defineAtomicSearchBoxQuerySuggestions } from "@coveo/atomic/components/atomic-search-box-query-suggestions";
import { AtomicSearchBoxRecentQueries as AtomicSearchBoxRecentQueriesElement, defineCustomElement as defineAtomicSearchBoxRecentQueries } from "@coveo/atomic/components/atomic-search-box-recent-queries";
import { AtomicSearchBox as AtomicSearchBoxElement, defineCustomElement as defineAtomicSearchBox } from "@coveo/atomic/components/atomic-search-box";
import { AtomicSearchInterface as AtomicSearchInterfaceElement, defineCustomElement as defineAtomicSearchInterface } from "@coveo/atomic/components/atomic-search-interface";
import { AtomicSearchLayout as AtomicSearchLayoutElement, defineCustomElement as defineAtomicSearchLayout } from "@coveo/atomic/components/atomic-search-layout";
import { AtomicSegmentedFacetScrollable as AtomicSegmentedFacetScrollableElement, defineCustomElement as defineAtomicSegmentedFacetScrollable } from "@coveo/atomic/components/atomic-segmented-facet-scrollable";
import { AtomicSegmentedFacet as AtomicSegmentedFacetElement, defineCustomElement as defineAtomicSegmentedFacet } from "@coveo/atomic/components/atomic-segmented-facet";
import { AtomicSmartSnippetFeedbackModal as AtomicSmartSnippetFeedbackModalElement, defineCustomElement as defineAtomicSmartSnippetFeedbackModal } from "@coveo/atomic/components/atomic-smart-snippet-feedback-modal";
import { AtomicSmartSnippetSuggestions as AtomicSmartSnippetSuggestionsElement, defineCustomElement as defineAtomicSmartSnippetSuggestions } from "@coveo/atomic/components/atomic-smart-snippet-suggestions";
import { AtomicSmartSnippet as AtomicSmartSnippetElement, defineCustomElement as defineAtomicSmartSnippet } from "@coveo/atomic/components/atomic-smart-snippet";
import { AtomicSortDropdown as AtomicSortDropdownElement, defineCustomElement as defineAtomicSortDropdown } from "@coveo/atomic/components/atomic-sort-dropdown";
import { AtomicSortExpression as AtomicSortExpressionElement, defineCustomElement as defineAtomicSortExpression } from "@coveo/atomic/components/atomic-sort-expression";
import { AtomicTabManager as AtomicTabManagerElement, defineCustomElement as defineAtomicTabManager } from "@coveo/atomic/components/atomic-tab-manager";
import { AtomicTableElement as AtomicTableElementElement, defineCustomElement as defineAtomicTableElement } from "@coveo/atomic/components/atomic-table-element";
import { AtomicText as AtomicTextElement, defineCustomElement as defineAtomicText } from "@coveo/atomic/components/atomic-text";
import { AtomicTimeframeFacet as AtomicTimeframeFacetElement, defineCustomElement as defineAtomicTimeframeFacet } from "@coveo/atomic/components/atomic-timeframe-facet";
import { AtomicTimeframe as AtomicTimeframeElement, defineCustomElement as defineAtomicTimeframe } from "@coveo/atomic/components/atomic-timeframe";
import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent } from '@stencil/react-output-target/runtime';
import React from 'react';

type AtomicAriaLiveEvents = NonNullable<unknown>;

export const AtomicAriaLive: StencilReactComponent<AtomicAriaLiveElement, AtomicAriaLiveEvents> = /*@__PURE__*/ createComponent<AtomicAriaLiveElement, AtomicAriaLiveEvents>({
    tagName: 'atomic-aria-live',
    elementClass: AtomicAriaLiveElement,
    react: React,
    events: {} as AtomicAriaLiveEvents,
    defineCustomElement: defineAtomicAriaLive
});

type AtomicAutomaticFacetEvents = NonNullable<unknown>;

export const AtomicAutomaticFacet: StencilReactComponent<AtomicAutomaticFacetElement, AtomicAutomaticFacetEvents> = /*@__PURE__*/ createComponent<AtomicAutomaticFacetElement, AtomicAutomaticFacetEvents>({
    tagName: 'atomic-automatic-facet',
    elementClass: AtomicAutomaticFacetElement,
    react: React,
    events: {} as AtomicAutomaticFacetEvents,
    defineCustomElement: defineAtomicAutomaticFacet
});

type AtomicAutomaticFacetGeneratorEvents = NonNullable<unknown>;

export const AtomicAutomaticFacetGenerator: StencilReactComponent<AtomicAutomaticFacetGeneratorElement, AtomicAutomaticFacetGeneratorEvents> = /*@__PURE__*/ createComponent<AtomicAutomaticFacetGeneratorElement, AtomicAutomaticFacetGeneratorEvents>({
    tagName: 'atomic-automatic-facet-generator',
    elementClass: AtomicAutomaticFacetGeneratorElement,
    react: React,
    events: {} as AtomicAutomaticFacetGeneratorEvents,
    defineCustomElement: defineAtomicAutomaticFacetGenerator
});

type AtomicBreadboxEvents = NonNullable<unknown>;

export const AtomicBreadbox: StencilReactComponent<AtomicBreadboxElement, AtomicBreadboxEvents> = /*@__PURE__*/ createComponent<AtomicBreadboxElement, AtomicBreadboxEvents>({
    tagName: 'atomic-breadbox',
    elementClass: AtomicBreadboxElement,
    react: React,
    events: {} as AtomicBreadboxEvents,
    defineCustomElement: defineAtomicBreadbox
});

type AtomicCategoryFacetEvents = NonNullable<unknown>;

export const AtomicCategoryFacet: StencilReactComponent<AtomicCategoryFacetElement, AtomicCategoryFacetEvents> = /*@__PURE__*/ createComponent<AtomicCategoryFacetElement, AtomicCategoryFacetEvents>({
    tagName: 'atomic-category-facet',
    elementClass: AtomicCategoryFacetElement,
    react: React,
    events: {} as AtomicCategoryFacetEvents,
    defineCustomElement: defineAtomicCategoryFacet
});

type AtomicColorFacetEvents = NonNullable<unknown>;

export const AtomicColorFacet: StencilReactComponent<AtomicColorFacetElement, AtomicColorFacetEvents> = /*@__PURE__*/ createComponent<AtomicColorFacetElement, AtomicColorFacetEvents>({
    tagName: 'atomic-color-facet',
    elementClass: AtomicColorFacetElement,
    react: React,
    events: {} as AtomicColorFacetEvents,
    defineCustomElement: defineAtomicColorFacet
});

type AtomicComponentErrorEvents = NonNullable<unknown>;

export const AtomicComponentError: StencilReactComponent<AtomicComponentErrorElement, AtomicComponentErrorEvents> = /*@__PURE__*/ createComponent<AtomicComponentErrorElement, AtomicComponentErrorEvents>({
    tagName: 'atomic-component-error',
    elementClass: AtomicComponentErrorElement,
    react: React,
    events: {} as AtomicComponentErrorEvents,
    defineCustomElement: defineAtomicComponentError
});

type AtomicDidYouMeanEvents = NonNullable<unknown>;

export const AtomicDidYouMean: StencilReactComponent<AtomicDidYouMeanElement, AtomicDidYouMeanEvents> = /*@__PURE__*/ createComponent<AtomicDidYouMeanElement, AtomicDidYouMeanEvents>({
    tagName: 'atomic-did-you-mean',
    elementClass: AtomicDidYouMeanElement,
    react: React,
    events: {} as AtomicDidYouMeanEvents,
    defineCustomElement: defineAtomicDidYouMean
});

type AtomicExternalEvents = NonNullable<unknown>;

export const AtomicExternal: StencilReactComponent<AtomicExternalElement, AtomicExternalEvents> = /*@__PURE__*/ createComponent<AtomicExternalElement, AtomicExternalEvents>({
    tagName: 'atomic-external',
    elementClass: AtomicExternalElement,
    react: React,
    events: {} as AtomicExternalEvents,
    defineCustomElement: defineAtomicExternal
});

type AtomicFacetEvents = NonNullable<unknown>;

export const AtomicFacet: StencilReactComponent<AtomicFacetElement, AtomicFacetEvents> = /*@__PURE__*/ createComponent<AtomicFacetElement, AtomicFacetEvents>({
    tagName: 'atomic-facet',
    elementClass: AtomicFacetElement,
    react: React,
    events: {} as AtomicFacetEvents,
    defineCustomElement: defineAtomicFacet
});

type AtomicFacetManagerEvents = NonNullable<unknown>;

export const AtomicFacetManager: StencilReactComponent<AtomicFacetManagerElement, AtomicFacetManagerEvents> = /*@__PURE__*/ createComponent<AtomicFacetManagerElement, AtomicFacetManagerEvents>({
    tagName: 'atomic-facet-manager',
    elementClass: AtomicFacetManagerElement,
    react: React,
    events: {} as AtomicFacetManagerEvents,
    defineCustomElement: defineAtomicFacetManager
});

type AtomicFoldedResultListEvents = NonNullable<unknown>;

export const AtomicFoldedResultList: StencilReactComponent<AtomicFoldedResultListElement, AtomicFoldedResultListEvents> = /*@__PURE__*/ createComponent<AtomicFoldedResultListElement, AtomicFoldedResultListEvents>({
    tagName: 'atomic-folded-result-list',
    elementClass: AtomicFoldedResultListElement,
    react: React,
    events: {} as AtomicFoldedResultListEvents,
    defineCustomElement: defineAtomicFoldedResultList
});

type AtomicFormatCurrencyEvents = NonNullable<unknown>;

export const AtomicFormatCurrency: StencilReactComponent<AtomicFormatCurrencyElement, AtomicFormatCurrencyEvents> = /*@__PURE__*/ createComponent<AtomicFormatCurrencyElement, AtomicFormatCurrencyEvents>({
    tagName: 'atomic-format-currency',
    elementClass: AtomicFormatCurrencyElement,
    react: React,
    events: {} as AtomicFormatCurrencyEvents,
    defineCustomElement: defineAtomicFormatCurrency
});

type AtomicFormatNumberEvents = NonNullable<unknown>;

export const AtomicFormatNumber: StencilReactComponent<AtomicFormatNumberElement, AtomicFormatNumberEvents> = /*@__PURE__*/ createComponent<AtomicFormatNumberElement, AtomicFormatNumberEvents>({
    tagName: 'atomic-format-number',
    elementClass: AtomicFormatNumberElement,
    react: React,
    events: {} as AtomicFormatNumberEvents,
    defineCustomElement: defineAtomicFormatNumber
});

type AtomicFormatUnitEvents = NonNullable<unknown>;

export const AtomicFormatUnit: StencilReactComponent<AtomicFormatUnitElement, AtomicFormatUnitEvents> = /*@__PURE__*/ createComponent<AtomicFormatUnitElement, AtomicFormatUnitEvents>({
    tagName: 'atomic-format-unit',
    elementClass: AtomicFormatUnitElement,
    react: React,
    events: {} as AtomicFormatUnitEvents,
    defineCustomElement: defineAtomicFormatUnit
});

type AtomicGeneratedAnswerEvents = NonNullable<unknown>;

export const AtomicGeneratedAnswer: StencilReactComponent<AtomicGeneratedAnswerElement, AtomicGeneratedAnswerEvents> = /*@__PURE__*/ createComponent<AtomicGeneratedAnswerElement, AtomicGeneratedAnswerEvents>({
    tagName: 'atomic-generated-answer',
    elementClass: AtomicGeneratedAnswerElement,
    react: React,
    events: {} as AtomicGeneratedAnswerEvents,
    defineCustomElement: defineAtomicGeneratedAnswer
});

type AtomicHtmlEvents = NonNullable<unknown>;

export const AtomicHtml: StencilReactComponent<AtomicHtmlElement, AtomicHtmlEvents> = /*@__PURE__*/ createComponent<AtomicHtmlElement, AtomicHtmlEvents>({
    tagName: 'atomic-html',
    elementClass: AtomicHtmlElement,
    react: React,
    events: {} as AtomicHtmlEvents,
    defineCustomElement: defineAtomicHtml
});

type AtomicIconEvents = NonNullable<unknown>;

export const AtomicIcon: StencilReactComponent<AtomicIconElement, AtomicIconEvents> = /*@__PURE__*/ createComponent<AtomicIconElement, AtomicIconEvents>({
    tagName: 'atomic-icon',
    elementClass: AtomicIconElement,
    react: React,
    events: {} as AtomicIconEvents,
    defineCustomElement: defineAtomicIcon
});

type AtomicLayoutSectionEvents = NonNullable<unknown>;

export const AtomicLayoutSection: StencilReactComponent<AtomicLayoutSectionElement, AtomicLayoutSectionEvents> = /*@__PURE__*/ createComponent<AtomicLayoutSectionElement, AtomicLayoutSectionEvents>({
    tagName: 'atomic-layout-section',
    elementClass: AtomicLayoutSectionElement,
    react: React,
    events: {} as AtomicLayoutSectionEvents,
    defineCustomElement: defineAtomicLayoutSection
});

type AtomicLoadMoreResultsEvents = NonNullable<unknown>;

export const AtomicLoadMoreResults: StencilReactComponent<AtomicLoadMoreResultsElement, AtomicLoadMoreResultsEvents> = /*@__PURE__*/ createComponent<AtomicLoadMoreResultsElement, AtomicLoadMoreResultsEvents>({
    tagName: 'atomic-load-more-results',
    elementClass: AtomicLoadMoreResultsElement,
    react: React,
    events: {} as AtomicLoadMoreResultsEvents,
    defineCustomElement: defineAtomicLoadMoreResults
});

type AtomicNoResultsEvents = NonNullable<unknown>;

export const AtomicNoResults: StencilReactComponent<AtomicNoResultsElement, AtomicNoResultsEvents> = /*@__PURE__*/ createComponent<AtomicNoResultsElement, AtomicNoResultsEvents>({
    tagName: 'atomic-no-results',
    elementClass: AtomicNoResultsElement,
    react: React,
    events: {} as AtomicNoResultsEvents,
    defineCustomElement: defineAtomicNoResults
});

type AtomicNotificationsEvents = NonNullable<unknown>;

export const AtomicNotifications: StencilReactComponent<AtomicNotificationsElement, AtomicNotificationsEvents> = /*@__PURE__*/ createComponent<AtomicNotificationsElement, AtomicNotificationsEvents>({
    tagName: 'atomic-notifications',
    elementClass: AtomicNotificationsElement,
    react: React,
    events: {} as AtomicNotificationsEvents,
    defineCustomElement: defineAtomicNotifications
});

type AtomicNumericFacetEvents = NonNullable<unknown>;

export const AtomicNumericFacet: StencilReactComponent<AtomicNumericFacetElement, AtomicNumericFacetEvents> = /*@__PURE__*/ createComponent<AtomicNumericFacetElement, AtomicNumericFacetEvents>({
    tagName: 'atomic-numeric-facet',
    elementClass: AtomicNumericFacetElement,
    react: React,
    events: {} as AtomicNumericFacetEvents,
    defineCustomElement: defineAtomicNumericFacet
});

type AtomicNumericRangeEvents = NonNullable<unknown>;

export const AtomicNumericRange: StencilReactComponent<AtomicNumericRangeElement, AtomicNumericRangeEvents> = /*@__PURE__*/ createComponent<AtomicNumericRangeElement, AtomicNumericRangeEvents>({
    tagName: 'atomic-numeric-range',
    elementClass: AtomicNumericRangeElement,
    react: React,
    events: {} as AtomicNumericRangeEvents,
    defineCustomElement: defineAtomicNumericRange
});

type AtomicPagerEvents = { 'onAtomic / scrollToTop': EventName<CustomEvent<any>> };

export const AtomicPager: StencilReactComponent<AtomicPagerElement, AtomicPagerEvents> = /*@__PURE__*/ createComponent<AtomicPagerElement, AtomicPagerEvents>({
    tagName: 'atomic-pager',
    elementClass: AtomicPagerElement,
    react: React,
    events: { 'onAtomic/ scrollToTop': 'atomic/scrollToTop'},
    defineCustomElement: defineAtomicPager
      });

type AtomicPopoverEvents = NonNullable<unknown>;

export const AtomicPopover: StencilReactComponent<AtomicPopoverElement, AtomicPopoverEvents> = /*@__PURE__*/ createComponent<AtomicPopoverElement, AtomicPopoverEvents>({
    tagName: 'atomic-popover',
    elementClass: AtomicPopoverElement,
    react: React,
    events: {} as AtomicPopoverEvents,
    defineCustomElement: defineAtomicPopover
});

type AtomicQueryErrorEvents = NonNullable<unknown>;

export const AtomicQueryError: StencilReactComponent<AtomicQueryErrorElement, AtomicQueryErrorEvents> = /*@__PURE__*/ createComponent<AtomicQueryErrorElement, AtomicQueryErrorEvents>({
    tagName: 'atomic-query-error',
    elementClass: AtomicQueryErrorElement,
    react: React,
    events: {} as AtomicQueryErrorEvents,
    defineCustomElement: defineAtomicQueryError
});

type AtomicQuerySummaryEvents = NonNullable<unknown>;

export const AtomicQuerySummary: StencilReactComponent<AtomicQuerySummaryElement, AtomicQuerySummaryEvents> = /*@__PURE__*/ createComponent<AtomicQuerySummaryElement, AtomicQuerySummaryEvents>({
    tagName: 'atomic-query-summary',
    elementClass: AtomicQuerySummaryElement,
    react: React,
    events: {} as AtomicQuerySummaryEvents,
    defineCustomElement: defineAtomicQuerySummary
});

type AtomicQuickviewEvents = NonNullable<unknown>;

export const AtomicQuickview: StencilReactComponent<AtomicQuickviewElement, AtomicQuickviewEvents> = /*@__PURE__*/ createComponent<AtomicQuickviewElement, AtomicQuickviewEvents>({
    tagName: 'atomic-quickview',
    elementClass: AtomicQuickviewElement,
    react: React,
    events: {} as AtomicQuickviewEvents,
    defineCustomElement: defineAtomicQuickview
});

type AtomicQuickviewModalEvents = { 'onAtomic / quickview / next': EventName<CustomEvent<any>>,
    'onAtomic / quickview / previous': EventName<CustomEvent<any>> };

export const AtomicQuickviewModal: StencilReactComponent<AtomicQuickviewModalElement, AtomicQuickviewModalEvents> = /*@__PURE__*/ createComponent<AtomicQuickviewModalElement, AtomicQuickviewModalEvents>({
    tagName: 'atomic-quickview-modal',
    elementClass: AtomicQuickviewModalElement,
    react: React,
    events: { 'onAtomic/ quickview / next': 'atomic/quickview/next',
    'onAtomic/ quickview / previous': 'atomic/quickview/previous'},
        defineCustomElement: defineAtomicQuickviewModal
      });

type AtomicRatingFacetEvents = NonNullable<unknown>;

export const AtomicRatingFacet: StencilReactComponent<AtomicRatingFacetElement, AtomicRatingFacetEvents> = /*@__PURE__*/ createComponent<AtomicRatingFacetElement, AtomicRatingFacetEvents>({
    tagName: 'atomic-rating-facet',
    elementClass: AtomicRatingFacetElement,
    react: React,
    events: {} as AtomicRatingFacetEvents,
    defineCustomElement: defineAtomicRatingFacet
});

type AtomicRatingRangeFacetEvents = NonNullable<unknown>;

export const AtomicRatingRangeFacet: StencilReactComponent<AtomicRatingRangeFacetElement, AtomicRatingRangeFacetEvents> = /*@__PURE__*/ createComponent<AtomicRatingRangeFacetElement, AtomicRatingRangeFacetEvents>({
    tagName: 'atomic-rating-range-facet',
    elementClass: AtomicRatingRangeFacetElement,
    react: React,
    events: {} as AtomicRatingRangeFacetEvents,
    defineCustomElement: defineAtomicRatingRangeFacet
});

type AtomicRecsErrorEvents = NonNullable<unknown>;

export const AtomicRecsError: StencilReactComponent<AtomicRecsErrorElement, AtomicRecsErrorEvents> = /*@__PURE__*/ createComponent<AtomicRecsErrorElement, AtomicRecsErrorEvents>({
    tagName: 'atomic-recs-error',
    elementClass: AtomicRecsErrorElement,
    react: React,
    events: {} as AtomicRecsErrorEvents,
    defineCustomElement: defineAtomicRecsError
});

type AtomicRecsInterfaceEvents = NonNullable<unknown>;

export const AtomicRecsInterface: StencilReactComponent<AtomicRecsInterfaceElement, AtomicRecsInterfaceEvents> = /*@__PURE__*/ createComponent<AtomicRecsInterfaceElement, AtomicRecsInterfaceEvents>({
    tagName: 'atomic-recs-interface',
    elementClass: AtomicRecsInterfaceElement,
    react: React,
    events: {} as AtomicRecsInterfaceEvents,
    defineCustomElement: defineAtomicRecsInterface
});

type AtomicRecsListEvents = NonNullable<unknown>;

export const AtomicRecsList: StencilReactComponent<AtomicRecsListElement, AtomicRecsListEvents> = /*@__PURE__*/ createComponent<AtomicRecsListElement, AtomicRecsListEvents>({
    tagName: 'atomic-recs-list',
    elementClass: AtomicRecsListElement,
    react: React,
    events: {} as AtomicRecsListEvents,
    defineCustomElement: defineAtomicRecsList
});

type AtomicRecsResultEvents = NonNullable<unknown>;

export const AtomicRecsResult: StencilReactComponent<AtomicRecsResultElement, AtomicRecsResultEvents> = /*@__PURE__*/ createComponent<AtomicRecsResultElement, AtomicRecsResultEvents>({
    tagName: 'atomic-recs-result',
    elementClass: AtomicRecsResultElement,
    react: React,
    events: {} as AtomicRecsResultEvents,
    defineCustomElement: defineAtomicRecsResult
});

type AtomicRefineModalEvents = NonNullable<unknown>;

export const AtomicRefineModal: StencilReactComponent<AtomicRefineModalElement, AtomicRefineModalEvents> = /*@__PURE__*/ createComponent<AtomicRefineModalElement, AtomicRefineModalEvents>({
    tagName: 'atomic-refine-modal',
    elementClass: AtomicRefineModalElement,
    react: React,
    events: {} as AtomicRefineModalEvents,
    defineCustomElement: defineAtomicRefineModal
});

type AtomicRefineToggleEvents = NonNullable<unknown>;

export const AtomicRefineToggle: StencilReactComponent<AtomicRefineToggleElement, AtomicRefineToggleEvents> = /*@__PURE__*/ createComponent<AtomicRefineToggleElement, AtomicRefineToggleEvents>({
    tagName: 'atomic-refine-toggle',
    elementClass: AtomicRefineToggleElement,
    react: React,
    events: {} as AtomicRefineToggleEvents,
    defineCustomElement: defineAtomicRefineToggle
});

type AtomicRelevanceInspectorEvents = { 'onAtomic / relevanceInspector / close': EventName<CustomEvent<any>> };

export const AtomicRelevanceInspector: StencilReactComponent<AtomicRelevanceInspectorElement, AtomicRelevanceInspectorEvents> = /*@__PURE__*/ createComponent<AtomicRelevanceInspectorElement, AtomicRelevanceInspectorEvents>({
    tagName: 'atomic-relevance-inspector',
    elementClass: AtomicRelevanceInspectorElement,
    react: React,
    events: { 'onAtomic/ relevanceInspector / close': 'atomic/relevanceInspector/close'},
    defineCustomElement: defineAtomicRelevanceInspector
      });

type AtomicResultEvents = NonNullable<unknown>;

export const AtomicResult: StencilReactComponent<AtomicResultElement, AtomicResultEvents> = /*@__PURE__*/ createComponent<AtomicResultElement, AtomicResultEvents>({
    tagName: 'atomic-result',
    elementClass: AtomicResultElement,
    react: React,
    events: {} as AtomicResultEvents,
    defineCustomElement: defineAtomicResult
});

type AtomicResultBadgeEvents = NonNullable<unknown>;

export const AtomicResultBadge: StencilReactComponent<AtomicResultBadgeElement, AtomicResultBadgeEvents> = /*@__PURE__*/ createComponent<AtomicResultBadgeElement, AtomicResultBadgeEvents>({
    tagName: 'atomic-result-badge',
    elementClass: AtomicResultBadgeElement,
    react: React,
    events: {} as AtomicResultBadgeEvents,
    defineCustomElement: defineAtomicResultBadge
});

type AtomicResultChildrenEvents = NonNullable<unknown>;

export const AtomicResultChildren: StencilReactComponent<AtomicResultChildrenElement, AtomicResultChildrenEvents> = /*@__PURE__*/ createComponent<AtomicResultChildrenElement, AtomicResultChildrenEvents>({
    tagName: 'atomic-result-children',
    elementClass: AtomicResultChildrenElement,
    react: React,
    events: {} as AtomicResultChildrenEvents,
    defineCustomElement: defineAtomicResultChildren
});

type AtomicResultChildrenTemplateEvents = NonNullable<unknown>;

export const AtomicResultChildrenTemplate: StencilReactComponent<AtomicResultChildrenTemplateElement, AtomicResultChildrenTemplateEvents> = /*@__PURE__*/ createComponent<AtomicResultChildrenTemplateElement, AtomicResultChildrenTemplateEvents>({
    tagName: 'atomic-result-children-template',
    elementClass: AtomicResultChildrenTemplateElement,
    react: React,
    events: {} as AtomicResultChildrenTemplateEvents,
    defineCustomElement: defineAtomicResultChildrenTemplate
});

type AtomicResultDateEvents = NonNullable<unknown>;

export const AtomicResultDate: StencilReactComponent<AtomicResultDateElement, AtomicResultDateEvents> = /*@__PURE__*/ createComponent<AtomicResultDateElement, AtomicResultDateEvents>({
    tagName: 'atomic-result-date',
    elementClass: AtomicResultDateElement,
    react: React,
    events: {} as AtomicResultDateEvents,
    defineCustomElement: defineAtomicResultDate
});

type AtomicResultFieldsListEvents = NonNullable<unknown>;

export const AtomicResultFieldsList: StencilReactComponent<AtomicResultFieldsListElement, AtomicResultFieldsListEvents> = /*@__PURE__*/ createComponent<AtomicResultFieldsListElement, AtomicResultFieldsListEvents>({
    tagName: 'atomic-result-fields-list',
    elementClass: AtomicResultFieldsListElement,
    react: React,
    events: {} as AtomicResultFieldsListEvents,
    defineCustomElement: defineAtomicResultFieldsList
});

type AtomicResultHtmlEvents = NonNullable<unknown>;

export const AtomicResultHtml: StencilReactComponent<AtomicResultHtmlElement, AtomicResultHtmlEvents> = /*@__PURE__*/ createComponent<AtomicResultHtmlElement, AtomicResultHtmlEvents>({
    tagName: 'atomic-result-html',
    elementClass: AtomicResultHtmlElement,
    react: React,
    events: {} as AtomicResultHtmlEvents,
    defineCustomElement: defineAtomicResultHtml
});

type AtomicResultIconEvents = NonNullable<unknown>;

export const AtomicResultIcon: StencilReactComponent<AtomicResultIconElement, AtomicResultIconEvents> = /*@__PURE__*/ createComponent<AtomicResultIconElement, AtomicResultIconEvents>({
    tagName: 'atomic-result-icon',
    elementClass: AtomicResultIconElement,
    react: React,
    events: {} as AtomicResultIconEvents,
    defineCustomElement: defineAtomicResultIcon
});

type AtomicResultImageEvents = NonNullable<unknown>;

export const AtomicResultImage: StencilReactComponent<AtomicResultImageElement, AtomicResultImageEvents> = /*@__PURE__*/ createComponent<AtomicResultImageElement, AtomicResultImageEvents>({
    tagName: 'atomic-result-image',
    elementClass: AtomicResultImageElement,
    react: React,
    events: {} as AtomicResultImageEvents,
    defineCustomElement: defineAtomicResultImage
});

type AtomicResultLinkEvents = NonNullable<unknown>;

export const AtomicResultLink: StencilReactComponent<AtomicResultLinkElement, AtomicResultLinkEvents> = /*@__PURE__*/ createComponent<AtomicResultLinkElement, AtomicResultLinkEvents>({
    tagName: 'atomic-result-link',
    elementClass: AtomicResultLinkElement,
    react: React,
    events: {} as AtomicResultLinkEvents,
    defineCustomElement: defineAtomicResultLink
});

type AtomicResultListEvents = NonNullable<unknown>;

export const AtomicResultList: StencilReactComponent<AtomicResultListElement, AtomicResultListEvents> = /*@__PURE__*/ createComponent<AtomicResultListElement, AtomicResultListEvents>({
    tagName: 'atomic-result-list',
    elementClass: AtomicResultListElement,
    react: React,
    events: {} as AtomicResultListEvents,
    defineCustomElement: defineAtomicResultList
});

type AtomicResultLocalizedTextEvents = NonNullable<unknown>;

export const AtomicResultLocalizedText: StencilReactComponent<AtomicResultLocalizedTextElement, AtomicResultLocalizedTextEvents> = /*@__PURE__*/ createComponent<AtomicResultLocalizedTextElement, AtomicResultLocalizedTextEvents>({
    tagName: 'atomic-result-localized-text',
    elementClass: AtomicResultLocalizedTextElement,
    react: React,
    events: {} as AtomicResultLocalizedTextEvents,
    defineCustomElement: defineAtomicResultLocalizedText
});

type AtomicResultMultiValueTextEvents = NonNullable<unknown>;

export const AtomicResultMultiValueText: StencilReactComponent<AtomicResultMultiValueTextElement, AtomicResultMultiValueTextEvents> = /*@__PURE__*/ createComponent<AtomicResultMultiValueTextElement, AtomicResultMultiValueTextEvents>({
    tagName: 'atomic-result-multi-value-text',
    elementClass: AtomicResultMultiValueTextElement,
    react: React,
    events: {} as AtomicResultMultiValueTextEvents,
    defineCustomElement: defineAtomicResultMultiValueText
});

type AtomicResultNumberEvents = NonNullable<unknown>;

export const AtomicResultNumber: StencilReactComponent<AtomicResultNumberElement, AtomicResultNumberEvents> = /*@__PURE__*/ createComponent<AtomicResultNumberElement, AtomicResultNumberEvents>({
    tagName: 'atomic-result-number',
    elementClass: AtomicResultNumberElement,
    react: React,
    events: {} as AtomicResultNumberEvents,
    defineCustomElement: defineAtomicResultNumber
});

type AtomicResultPrintableUriEvents = NonNullable<unknown>;

export const AtomicResultPrintableUri: StencilReactComponent<AtomicResultPrintableUriElement, AtomicResultPrintableUriEvents> = /*@__PURE__*/ createComponent<AtomicResultPrintableUriElement, AtomicResultPrintableUriEvents>({
    tagName: 'atomic-result-printable-uri',
    elementClass: AtomicResultPrintableUriElement,
    react: React,
    events: {} as AtomicResultPrintableUriEvents,
    defineCustomElement: defineAtomicResultPrintableUri
});

type AtomicResultRatingEvents = NonNullable<unknown>;

export const AtomicResultRating: StencilReactComponent<AtomicResultRatingElement, AtomicResultRatingEvents> = /*@__PURE__*/ createComponent<AtomicResultRatingElement, AtomicResultRatingEvents>({
    tagName: 'atomic-result-rating',
    elementClass: AtomicResultRatingElement,
    react: React,
    events: {} as AtomicResultRatingEvents,
    defineCustomElement: defineAtomicResultRating
});

type AtomicResultSectionActionsEvents = NonNullable<unknown>;

export const AtomicResultSectionActions: StencilReactComponent<AtomicResultSectionActionsElement, AtomicResultSectionActionsEvents> = /*@__PURE__*/ createComponent<AtomicResultSectionActionsElement, AtomicResultSectionActionsEvents>({
    tagName: 'atomic-result-section-actions',
    elementClass: AtomicResultSectionActionsElement,
    react: React,
    events: {} as AtomicResultSectionActionsEvents,
    defineCustomElement: defineAtomicResultSectionActions
});

type AtomicResultSectionBadgesEvents = NonNullable<unknown>;

export const AtomicResultSectionBadges: StencilReactComponent<AtomicResultSectionBadgesElement, AtomicResultSectionBadgesEvents> = /*@__PURE__*/ createComponent<AtomicResultSectionBadgesElement, AtomicResultSectionBadgesEvents>({
    tagName: 'atomic-result-section-badges',
    elementClass: AtomicResultSectionBadgesElement,
    react: React,
    events: {} as AtomicResultSectionBadgesEvents,
    defineCustomElement: defineAtomicResultSectionBadges
});

type AtomicResultSectionBottomMetadataEvents = NonNullable<unknown>;

export const AtomicResultSectionBottomMetadata: StencilReactComponent<AtomicResultSectionBottomMetadataElement, AtomicResultSectionBottomMetadataEvents> = /*@__PURE__*/ createComponent<AtomicResultSectionBottomMetadataElement, AtomicResultSectionBottomMetadataEvents>({
    tagName: 'atomic-result-section-bottom-metadata',
    elementClass: AtomicResultSectionBottomMetadataElement,
    react: React,
    events: {} as AtomicResultSectionBottomMetadataEvents,
    defineCustomElement: defineAtomicResultSectionBottomMetadata
});

type AtomicResultSectionChildrenEvents = NonNullable<unknown>;

export const AtomicResultSectionChildren: StencilReactComponent<AtomicResultSectionChildrenElement, AtomicResultSectionChildrenEvents> = /*@__PURE__*/ createComponent<AtomicResultSectionChildrenElement, AtomicResultSectionChildrenEvents>({
    tagName: 'atomic-result-section-children',
    elementClass: AtomicResultSectionChildrenElement,
    react: React,
    events: {} as AtomicResultSectionChildrenEvents,
    defineCustomElement: defineAtomicResultSectionChildren
});

type AtomicResultSectionEmphasizedEvents = NonNullable<unknown>;

export const AtomicResultSectionEmphasized: StencilReactComponent<AtomicResultSectionEmphasizedElement, AtomicResultSectionEmphasizedEvents> = /*@__PURE__*/ createComponent<AtomicResultSectionEmphasizedElement, AtomicResultSectionEmphasizedEvents>({
    tagName: 'atomic-result-section-emphasized',
    elementClass: AtomicResultSectionEmphasizedElement,
    react: React,
    events: {} as AtomicResultSectionEmphasizedEvents,
    defineCustomElement: defineAtomicResultSectionEmphasized
});

type AtomicResultSectionExcerptEvents = NonNullable<unknown>;

export const AtomicResultSectionExcerpt: StencilReactComponent<AtomicResultSectionExcerptElement, AtomicResultSectionExcerptEvents> = /*@__PURE__*/ createComponent<AtomicResultSectionExcerptElement, AtomicResultSectionExcerptEvents>({
    tagName: 'atomic-result-section-excerpt',
    elementClass: AtomicResultSectionExcerptElement,
    react: React,
    events: {} as AtomicResultSectionExcerptEvents,
    defineCustomElement: defineAtomicResultSectionExcerpt
});

type AtomicResultSectionTitleEvents = NonNullable<unknown>;

export const AtomicResultSectionTitle: StencilReactComponent<AtomicResultSectionTitleElement, AtomicResultSectionTitleEvents> = /*@__PURE__*/ createComponent<AtomicResultSectionTitleElement, AtomicResultSectionTitleEvents>({
    tagName: 'atomic-result-section-title',
    elementClass: AtomicResultSectionTitleElement,
    react: React,
    events: {} as AtomicResultSectionTitleEvents,
    defineCustomElement: defineAtomicResultSectionTitle
});

type AtomicResultSectionTitleMetadataEvents = NonNullable<unknown>;

export const AtomicResultSectionTitleMetadata: StencilReactComponent<AtomicResultSectionTitleMetadataElement, AtomicResultSectionTitleMetadataEvents> = /*@__PURE__*/ createComponent<AtomicResultSectionTitleMetadataElement, AtomicResultSectionTitleMetadataEvents>({
    tagName: 'atomic-result-section-title-metadata',
    elementClass: AtomicResultSectionTitleMetadataElement,
    react: React,
    events: {} as AtomicResultSectionTitleMetadataEvents,
    defineCustomElement: defineAtomicResultSectionTitleMetadata
});

type AtomicResultSectionVisualEvents = NonNullable<unknown>;

export const AtomicResultSectionVisual: StencilReactComponent<AtomicResultSectionVisualElement, AtomicResultSectionVisualEvents> = /*@__PURE__*/ createComponent<AtomicResultSectionVisualElement, AtomicResultSectionVisualEvents>({
    tagName: 'atomic-result-section-visual',
    elementClass: AtomicResultSectionVisualElement,
    react: React,
    events: {} as AtomicResultSectionVisualEvents,
    defineCustomElement: defineAtomicResultSectionVisual
});

type AtomicResultTextEvents = NonNullable<unknown>;

export const AtomicResultText: StencilReactComponent<AtomicResultTextElement, AtomicResultTextEvents> = /*@__PURE__*/ createComponent<AtomicResultTextElement, AtomicResultTextEvents>({
    tagName: 'atomic-result-text',
    elementClass: AtomicResultTextElement,
    react: React,
    events: {} as AtomicResultTextEvents,
    defineCustomElement: defineAtomicResultText
});

type AtomicResultTimespanEvents = NonNullable<unknown>;

export const AtomicResultTimespan: StencilReactComponent<AtomicResultTimespanElement, AtomicResultTimespanEvents> = /*@__PURE__*/ createComponent<AtomicResultTimespanElement, AtomicResultTimespanEvents>({
    tagName: 'atomic-result-timespan',
    elementClass: AtomicResultTimespanElement,
    react: React,
    events: {} as AtomicResultTimespanEvents,
    defineCustomElement: defineAtomicResultTimespan
});

type AtomicResultsPerPageEvents = { 'onAtomic / scrollToTop': EventName<CustomEvent<any>> };

export const AtomicResultsPerPage: StencilReactComponent<AtomicResultsPerPageElement, AtomicResultsPerPageEvents> = /*@__PURE__*/ createComponent<AtomicResultsPerPageElement, AtomicResultsPerPageEvents>({
    tagName: 'atomic-results-per-page',
    elementClass: AtomicResultsPerPageElement,
    react: React,
    events: { 'onAtomic/ scrollToTop': 'atomic/scrollToTop'},
    defineCustomElement: defineAtomicResultsPerPage
      });

type AtomicSearchBoxEvents = { onRedirect: EventName<RedirectionPayload> };

export const AtomicSearchBox: StencilReactComponent<AtomicSearchBoxElement, AtomicSearchBoxEvents> = /*@__PURE__*/ createComponent<AtomicSearchBoxElement, AtomicSearchBoxEvents>({
    tagName: 'atomic-search-box',
    elementClass: AtomicSearchBoxElement,
    react: React,
    events: { onRedirect: 'redirect' } as AtomicSearchBoxEvents,
    defineCustomElement: defineAtomicSearchBox
});

type AtomicSearchBoxInstantResultsEvents = NonNullable<unknown>;

export const AtomicSearchBoxInstantResults: StencilReactComponent<AtomicSearchBoxInstantResultsElement, AtomicSearchBoxInstantResultsEvents> = /*@__PURE__*/ createComponent<AtomicSearchBoxInstantResultsElement, AtomicSearchBoxInstantResultsEvents>({
    tagName: 'atomic-search-box-instant-results',
    elementClass: AtomicSearchBoxInstantResultsElement,
    react: React,
    events: {} as AtomicSearchBoxInstantResultsEvents,
    defineCustomElement: defineAtomicSearchBoxInstantResults
});

type AtomicSearchBoxQuerySuggestionsEvents = NonNullable<unknown>;

export const AtomicSearchBoxQuerySuggestions: StencilReactComponent<AtomicSearchBoxQuerySuggestionsElement, AtomicSearchBoxQuerySuggestionsEvents> = /*@__PURE__*/ createComponent<AtomicSearchBoxQuerySuggestionsElement, AtomicSearchBoxQuerySuggestionsEvents>({
    tagName: 'atomic-search-box-query-suggestions',
    elementClass: AtomicSearchBoxQuerySuggestionsElement,
    react: React,
    events: {} as AtomicSearchBoxQuerySuggestionsEvents,
    defineCustomElement: defineAtomicSearchBoxQuerySuggestions
});

type AtomicSearchBoxRecentQueriesEvents = NonNullable<unknown>;

export const AtomicSearchBoxRecentQueries: StencilReactComponent<AtomicSearchBoxRecentQueriesElement, AtomicSearchBoxRecentQueriesEvents> = /*@__PURE__*/ createComponent<AtomicSearchBoxRecentQueriesElement, AtomicSearchBoxRecentQueriesEvents>({
    tagName: 'atomic-search-box-recent-queries',
    elementClass: AtomicSearchBoxRecentQueriesElement,
    react: React,
    events: {} as AtomicSearchBoxRecentQueriesEvents,
    defineCustomElement: defineAtomicSearchBoxRecentQueries
});

type AtomicSearchInterfaceEvents = NonNullable<unknown>;

export const AtomicSearchInterface: StencilReactComponent<AtomicSearchInterfaceElement, AtomicSearchInterfaceEvents> = /*@__PURE__*/ createComponent<AtomicSearchInterfaceElement, AtomicSearchInterfaceEvents>({
    tagName: 'atomic-search-interface',
    elementClass: AtomicSearchInterfaceElement,
    react: React,
    events: {} as AtomicSearchInterfaceEvents,
    defineCustomElement: defineAtomicSearchInterface
});

type AtomicSearchLayoutEvents = NonNullable<unknown>;

export const AtomicSearchLayout: StencilReactComponent<AtomicSearchLayoutElement, AtomicSearchLayoutEvents> = /*@__PURE__*/ createComponent<AtomicSearchLayoutElement, AtomicSearchLayoutEvents>({
    tagName: 'atomic-search-layout',
    elementClass: AtomicSearchLayoutElement,
    react: React,
    events: {} as AtomicSearchLayoutEvents,
    defineCustomElement: defineAtomicSearchLayout
});

type AtomicSegmentedFacetEvents = NonNullable<unknown>;

export const AtomicSegmentedFacet: StencilReactComponent<AtomicSegmentedFacetElement, AtomicSegmentedFacetEvents> = /*@__PURE__*/ createComponent<AtomicSegmentedFacetElement, AtomicSegmentedFacetEvents>({
    tagName: 'atomic-segmented-facet',
    elementClass: AtomicSegmentedFacetElement,
    react: React,
    events: {} as AtomicSegmentedFacetEvents,
    defineCustomElement: defineAtomicSegmentedFacet
});

type AtomicSegmentedFacetScrollableEvents = NonNullable<unknown>;

export const AtomicSegmentedFacetScrollable: StencilReactComponent<AtomicSegmentedFacetScrollableElement, AtomicSegmentedFacetScrollableEvents> = /*@__PURE__*/ createComponent<AtomicSegmentedFacetScrollableElement, AtomicSegmentedFacetScrollableEvents>({
    tagName: 'atomic-segmented-facet-scrollable',
    elementClass: AtomicSegmentedFacetScrollableElement,
    react: React,
    events: {} as AtomicSegmentedFacetScrollableEvents,
    defineCustomElement: defineAtomicSegmentedFacetScrollable
});

type AtomicSmartSnippetEvents = NonNullable<unknown>;

export const AtomicSmartSnippet: StencilReactComponent<AtomicSmartSnippetElement, AtomicSmartSnippetEvents> = /*@__PURE__*/ createComponent<AtomicSmartSnippetElement, AtomicSmartSnippetEvents>({
    tagName: 'atomic-smart-snippet',
    elementClass: AtomicSmartSnippetElement,
    react: React,
    events: {} as AtomicSmartSnippetEvents,
    defineCustomElement: defineAtomicSmartSnippet
});

type AtomicSmartSnippetFeedbackModalEvents = { onFeedbackSent: EventName<CustomEvent<any>> };

export const AtomicSmartSnippetFeedbackModal: StencilReactComponent<AtomicSmartSnippetFeedbackModalElement, AtomicSmartSnippetFeedbackModalEvents> = /*@__PURE__*/ createComponent<AtomicSmartSnippetFeedbackModalElement, AtomicSmartSnippetFeedbackModalEvents>({
    tagName: 'atomic-smart-snippet-feedback-modal',
    elementClass: AtomicSmartSnippetFeedbackModalElement,
    react: React,
    events: { onFeedbackSent: 'feedbackSent' } as AtomicSmartSnippetFeedbackModalEvents,
    defineCustomElement: defineAtomicSmartSnippetFeedbackModal
});

type AtomicSmartSnippetSuggestionsEvents = NonNullable<unknown>;

export const AtomicSmartSnippetSuggestions: StencilReactComponent<AtomicSmartSnippetSuggestionsElement, AtomicSmartSnippetSuggestionsEvents> = /*@__PURE__*/ createComponent<AtomicSmartSnippetSuggestionsElement, AtomicSmartSnippetSuggestionsEvents>({
    tagName: 'atomic-smart-snippet-suggestions',
    elementClass: AtomicSmartSnippetSuggestionsElement,
    react: React,
    events: {} as AtomicSmartSnippetSuggestionsEvents,
    defineCustomElement: defineAtomicSmartSnippetSuggestions
});

type AtomicSortDropdownEvents = NonNullable<unknown>;

export const AtomicSortDropdown: StencilReactComponent<AtomicSortDropdownElement, AtomicSortDropdownEvents> = /*@__PURE__*/ createComponent<AtomicSortDropdownElement, AtomicSortDropdownEvents>({
    tagName: 'atomic-sort-dropdown',
    elementClass: AtomicSortDropdownElement,
    react: React,
    events: {} as AtomicSortDropdownEvents,
    defineCustomElement: defineAtomicSortDropdown
});

type AtomicSortExpressionEvents = NonNullable<unknown>;

export const AtomicSortExpression: StencilReactComponent<AtomicSortExpressionElement, AtomicSortExpressionEvents> = /*@__PURE__*/ createComponent<AtomicSortExpressionElement, AtomicSortExpressionEvents>({
    tagName: 'atomic-sort-expression',
    elementClass: AtomicSortExpressionElement,
    react: React,
    events: {} as AtomicSortExpressionEvents,
    defineCustomElement: defineAtomicSortExpression
});

type AtomicTabManagerEvents = NonNullable<unknown>;

export const AtomicTabManager: StencilReactComponent<AtomicTabManagerElement, AtomicTabManagerEvents> = /*@__PURE__*/ createComponent<AtomicTabManagerElement, AtomicTabManagerEvents>({
    tagName: 'atomic-tab-manager',
    elementClass: AtomicTabManagerElement,
    react: React,
    events: {} as AtomicTabManagerEvents,
    defineCustomElement: defineAtomicTabManager
});

type AtomicTableElementEvents = NonNullable<unknown>;

export const AtomicTableElement: StencilReactComponent<AtomicTableElementElement, AtomicTableElementEvents> = /*@__PURE__*/ createComponent<AtomicTableElementElement, AtomicTableElementEvents>({
    tagName: 'atomic-table-element',
    elementClass: AtomicTableElementElement,
    react: React,
    events: {} as AtomicTableElementEvents,
    defineCustomElement: defineAtomicTableElement
});

type AtomicTextEvents = NonNullable<unknown>;

export const AtomicText: StencilReactComponent<AtomicTextElement, AtomicTextEvents> = /*@__PURE__*/ createComponent<AtomicTextElement, AtomicTextEvents>({
    tagName: 'atomic-text',
    elementClass: AtomicTextElement,
    react: React,
    events: {} as AtomicTextEvents,
    defineCustomElement: defineAtomicText
});

type AtomicTimeframeEvents = NonNullable<unknown>;

export const AtomicTimeframe: StencilReactComponent<AtomicTimeframeElement, AtomicTimeframeEvents> = /*@__PURE__*/ createComponent<AtomicTimeframeElement, AtomicTimeframeEvents>({
    tagName: 'atomic-timeframe',
    elementClass: AtomicTimeframeElement,
    react: React,
    events: {} as AtomicTimeframeEvents,
    defineCustomElement: defineAtomicTimeframe
});

type AtomicTimeframeFacetEvents = NonNullable<unknown>;

export const AtomicTimeframeFacet: StencilReactComponent<AtomicTimeframeFacetElement, AtomicTimeframeFacetEvents> = /*@__PURE__*/ createComponent<AtomicTimeframeFacetElement, AtomicTimeframeFacetEvents>({
    tagName: 'atomic-timeframe-facet',
    elementClass: AtomicTimeframeFacetElement,
    react: React,
    events: {} as AtomicTimeframeFacetEvents,
    defineCustomElement: defineAtomicTimeframeFacet
});
